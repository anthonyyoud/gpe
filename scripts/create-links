#!/bin/bash
# $Id$
#----------------------------------------------------------------------------

PATH=.:/bin:/usr/bin

usage(){
cat <<EOF

create-links
---------

DESCRIPTION:

Create symbolic links for files named prefixn.suffix to files named
prefixm.suffix which may or may not be in the current directory.  n is any
index which differentiates the files.  m is another index with a fixed number
of digits incremented by 1 for each file.

USAGE:

        create-links [OPTIONS] <linkdir>

OPTIONS:

        -d <process directory>|--procdir=<process directory>
                    process directory prefix [proc]

        -h|--help
                    display this help

        -i <index>|--startindex=<index>
                    which index to start the links at [0]

        -l <link directory>|--linkdir=<link directory>
                    links directory [links]

        -n <num zeros>|--numzeros=<num zeros>
                    number of zeros in the filename [7]

        -p <prefix>|--prefix=<prefix>
                    filename prefix [dens]

        -s <suffix>|--suffix=<suffix>
                    filename suffix [dat]

EOF
}

# Get command line options
options=`getopt -o d:hi:n:p:s: -l procdir:,help,startindex:,numzeros:,prefix:,suffix: -n create-links -- "$@"`

# If no options, show the help
if [ $# == 0 ]; then
  usage
  exit 1
fi

eval set -- "$options"

procdir='proc'
start=0
numzeros=7
prefix='dens'
suffix='dat'

# Set parameters depending on options
while true
do
  case "$1" in
    -d|--procdir) procdir=$2; shift 2;;
    -i|--startindex) start=$2; shift 2;;
    -n|--numzeros) numzeros=$2; shift 2;;
    -p|--prefix) prefix=$2; shift 2;;
    -s|--suffix) suffix=$2; shift 2;;
    -h|--help) usage; exit 1;;
    --) shift ; break ;;
    *) echo "Invalid flag" ; exit 1 ;;
  esac
done

linkdir=$1

# Assume the last character of the prefix is a separator before the index.
sep=${prefix:${#prefix}-1:1}
# Create a new directory for the symlinks if it doesn't already exist.
if [ ! -d $linkdir ]; then
  mkdir $linkdir
fi
# Create process directories below symlink directory
for i in `ls -d $procdir*`
do
  mkdir $linkdir/$i &> /dev/null
done
# Get the current working directory
cwd=`pwd`
# Initialise an empty string
string=""
# Create a string of zeros of length specified as an argument.
for i in `seq 0 $(( $numzeros-1 ))`
do
  string="0"$string
done
# Initialise some indices
i=$start
zeros=1
# Loop over all process directories
for dir in `ls -d $procdir*`
do
  i=$start
  # Loop over all files
  for num in `ls $dir/$prefix*.$suffix | cut -d $sep -f 2 | cut -d . -f 1`
  do
    k=$(( $i/10 ))
    zeros=1
  # Determine how many zeros should be removed from the string.
    while [ $k -gt 0 ]; do
      zeros=$(( $zeros+1 ))
      k=$(( $k/10 ))
    done
  # Construct the new index with the required number of zeros removed.
    new_str=${string:$zeros:${#string}}$i
    i=$(( i+1 ))
    linkfile=$linkdir/$dir/$prefix$new_str.$suffix
  # Skip this link if it already exists.
    if [ -h $linkfile ]; then
      echo $linkfile exists.  Skipping...
      continue
    fi
  # Create the symlink.
    ln -s `pwd`/$dir/$prefix$num.$suffix $linkfile
    if [ $? -ne 0 ]; then
      exit 2
    fi
  done
done
echo DONE!
